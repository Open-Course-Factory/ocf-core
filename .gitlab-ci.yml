# workflow:
#   name: 'Build, test and push images'

stages:
  - build
  - test
  - push

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"


build test and push api image:
  image: docker:latest # TODO use a specifc version instead of latest
  tags:
    - docker
  services:
    - docker:dind
  stage: build
  variables:
    IMAGE_TAG: 1.0.0
    IMAGE_NAME: $CI_REGISTRY_IMAGE
    CONTAINER_TEST_IMAGE: $IMAGE_NAME:commit.$CI_COMMIT_SHA
    CONTAINER_RELEASE_IMAGE: $IMAGE_NAME:$IMAGE_TAG
    CONTAINER_LATEST_IMAGE: $IMAGE_NAME:latest
  # rules:
  #   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  #     changes:
  #       - src/**/*
  #       - Dockerfile
  #       - main.go
    #   when: manual
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo Building image $CONTAINER_TEST_IMAGE
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker image build . --cache-from $CONTAINER_RELEASE_IMAGE --tag $CONTAINER_TEST_IMAGE --tag $CONTAINER_RELEASE_IMAGE
    - docker container run --name api $CONTAINER_TEST_IMAGE cp .env tests/testsIntegration/
    - echo Running tests
    - docker container run --name api $CONTAINER_TEST_IMAGE go test ./...
    - docker container rm --force api
    - echo Pushing built images
    - docker image push $CONTAINER_RELEASE_IMAGE
    - docker image tag $CONTAINER_RELEASE_IMAGE $CONTAINER_LATEST_IMAGE
    - docker image push $CONTAINER_LATEST_IMAGE

    # - sh build.sh
    # - sh test.sh
    # - sh push.sh

