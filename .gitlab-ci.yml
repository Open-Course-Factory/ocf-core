variables:
  KUBE_CONTEXT: ci-cd-chihi-mecheri-michel-gueye/ocf-core
stages:
  #- build
  - test
  - deploy

#include:
  #- template: Jobs/Build.gitlab-ci.yml

#build:
  #before_script:
   # - touch ./src/auth/casdoor/token_jwt_key.pem
  #rules:
   # - if: '$CI_COMMIT_REF_NAME == "test-mame"'

test-k8s:
  stage: test
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config use-context $KUBE_CONTEXT:k3d-connection
    - kubectl get pods
    - kubectl get nodes

  rules:
    - if: '$CI_COMMIT_REF_NAME == "test-mame"'

# DÃ©ploiement des services Kubernetes
deploy-k8s:
  stage: deploy
  image: ubuntu:20.04
  before_script:
    - apt-get update && apt-get install -y curl apt-transport-https gnupg lsb-release
    # Installer Kubectl
    - curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
    - apt-get update && apt-get install -y kubectl
    # Installer Helm
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    - chmod +x get_helm.sh
    - ./get_helm.sh
  script:
    - kubectl version --client
    - helm version
    - kubectl config use-context $KUBE_CONTEXT:k3d-connection
    - kubectl get pods
    - helm upgrade --install $HELM_RELEASE_NAME ./chart --namespace $HELM_NAMESPACE --values ./chart/values.yaml

  rules:
    - if: '$CI_COMMIT_REF_NAME == "test-mame"'
