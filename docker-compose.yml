services:
  ocf-core:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - "./.env:/home/ocf/.env"
    ports:
      - 8080:8080
    depends_on:
      - casdoor
      - postgres
    networks:
      - devcontainer-network

  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - devcontainer-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_ADDRESS: "0.0.0.0"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - devcontainer-network

  casdoor:
    image: casbin/casdoor
    entrypoint: /bin/sh -c './server --createDatabase=true'
    ports:
      - "8000:8000"
    depends_on:
      - casdoor_db
    environment:
      RUNNING_IN_DOCKER: "true"
    volumes:
      - "./src/configuration/casdoor_app.conf:/conf/app.conf"
      - "./init_data.json:/init_data.json"
    networks:
      - devcontainer-network
  casdoor_db:
    image: mysql:8.0.25
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - devcontainer-network

networks:
  devcontainer-network:

volumes:
  postgres:
  mysql:
  pgadmin:
