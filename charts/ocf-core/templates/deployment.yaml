#apiVersion: apps/v1
#kind: Deployment
#metadata:
 # name: {{ .Release.Name }}
#spec:
 # selector:
  #  matchLabels:
   #   app: {{ .Release.Name }}
  #template:
   # metadata:
    #  labels:
     #   app: {{ .Release.Name }}
    #spec:
     # imagePullSecrets:
      #  - name: gitlab-registry    # Ajout de cette section
      #containers:
      #- name: {{ .Chart.Name }}
       # image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        #ports:
        #- containerPort: {{ .Values.service.port }}"


apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocf-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ocf-core
  template:
    metadata:
      labels:
        app: ocf-core
    spec:
      imagePullSecrets:
        - name: gitlab-registry 
      containers:
        - name: ocf-core
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          volumeMounts:
            - name: env-volume
              mountPath: /home/ocf/.env
              subPath: .env
      volumes:
        - name: env-volume
          configMap:
            name: ocf-core-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image }}"
          ports:
            - containerPort: {{ .Values.postgres.port }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.env.POSTGRES_DB }}"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: casdoor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: casdoor
  template:
    metadata:
      labels:
        app: casdoor
    spec:
      containers:
        - name: casdoor
          image: "{{ .Values.casdoor.image }}"
          ports:
            - containerPort: {{ .Values.casdoor.port }}
          volumeMounts:
            - name: casdoor-config
              mountPath: /conf/app.conf
              subPath: app.conf
      volumes:
        - name: casdoor-config
          configMap:
            name: casdoor-config
